{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "389501035397515213"
    }
  },
  "parameters": {
    "aiHubName": {
      "type": "string",
      "defaultValue": "demo",
      "minLength": 2,
      "maxLength": 12,
      "metadata": {
        "description": "Name for the AI resource and used to derive name of dependent resources."
      }
    },
    "aiHubFriendlyName": {
      "type": "string",
      "defaultValue": "Demo AI resource",
      "metadata": {
        "description": "Friendly name for your Azure AI resource"
      }
    },
    "aiHubDescription": {
      "type": "string",
      "defaultValue": "This is an example AI resource for use in Azure AI Studio.",
      "metadata": {
        "description": "Description of your Azure AI resource displayed in AI studio"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region used for the deployment of all resources."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Set of tags to apply to all resources."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Resource name of the virtual network to deploy the resource into."
      }
    },
    "vnetRgName": {
      "type": "string",
      "metadata": {
        "description": "Resource group name of the virtual network to deploy the resource into."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet to deploy into."
      }
    }
  },
  "variables": {
    "name": "[toLower(format('{0}', parameters('aiHubName')))]",
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 7)]",
    "vnetResourceId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/virtualNetworks/{2}', subscription().subscriptionId, parameters('vnetRgName'), parameters('vnetName'))]",
    "subnetResourceId": "[format('{0}/subnets/{1}', variables('vnetResourceId'), parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageName": {
            "value": "[format('st{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "keyvaultName": {
            "value": "[format('kv-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "applicationInsightsName": {
            "value": "[format('appi-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "containerRegistryName": {
            "value": "[format('cr{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "aiServicesName": {
            "value": "[format('ais{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "subnetResourceId": {
            "value": "[variables('subnetResourceId')]"
          },
          "uniqueSuffix": {
            "value": "[variables('uniqueSuffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "2704174455840253760"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "aiServicesName": {
              "type": "string",
              "metadata": {
                "description": "AI services name"
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Application Insights resource name"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "metadata": {
                "description": "Container registry name"
              }
            },
            "keyvaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault"
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Subnet Id to deploy into."
              }
            },
            "uniqueSuffix": {
              "type": "string",
              "metadata": {
                "description": "Unique Suffix used for name generation"
              }
            },
            "storageName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage account"
              }
            },
            "storageSkuName": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Premium_LRS",
                "Premium_ZRS"
              ],
              "metadata": {
                "description": "Storage SKU"
              }
            }
          },
          "variables": {
            "containerRegistryNameCleaned": "[replace(parameters('containerRegistryName'), '-', '')]",
            "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "DisableIpMasking": false,
                "DisableLocalAuth": false,
                "Flow_Type": "Bluefield",
                "ForceCustomerStorageForProfiler": false,
                "ImmediatePurgeDataOn30Days": true,
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Disabled",
                "Request_Source": "rest"
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-09-01",
              "name": "[variables('containerRegistryNameCleaned')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "adminUserEnabled": true,
                "dataEndpointEnabled": false,
                "networkRuleBypassOptions": "AzureServices",
                "networkRuleSet": {
                  "defaultAction": "Deny"
                },
                "policies": {
                  "quarantinePolicy": {
                    "status": "enabled"
                  },
                  "retentionPolicy": {
                    "status": "enabled",
                    "days": 7
                  },
                  "trustPolicy": {
                    "status": "disabled",
                    "type": "Notary"
                  }
                },
                "publicNetworkAccess": "Disabled",
                "zoneRedundancy": "Disabled"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('keyvaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2021-10-01",
              "name": "[parameters('aiServicesName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "kind": "AIServices",
              "properties": {
                "apiProperties": {
                  "statisticsEnabled": false
                },
                "networkAcls": {
                  "defaultAction": "Deny",
                  "virtualNetworkRules": [
                    {
                      "id": "[parameters('subnetResourceId')]",
                      "ignoreMissingVnetServiceEndpoint": false
                    }
                  ],
                  "ipRules": []
                },
                "customSubDomainName": "[parameters('aiServicesName')]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[variables('storageNameCleaned')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('storageSkuName')]"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowCrossTenantReplication": false,
                "allowSharedKeyAccess": true,
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "queue": {
                      "enabled": true,
                      "keyType": "Service"
                    },
                    "table": {
                      "enabled": true,
                      "keyType": "Service"
                    }
                  }
                },
                "isHnsEnabled": false,
                "isNfsV3Enabled": false,
                "keyPolicy": {
                  "keyExpirationPeriodInDays": 7
                },
                "largeFileSharesState": "Disabled",
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "publicNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}-blob-pe', variables('storageNameCleaned'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "blob",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}-file-pe', variables('storageNameCleaned'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "file",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', variables('storageNameCleaned'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', variables('storageNameCleaned'))), 'Storage Blob Data Contributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', variables('storageNameCleaned'))), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', variables('storageNameCleaned')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            }
          ],
          "outputs": {
            "aiservicesID": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]"
            },
            "aiservicesTarget": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName')), '2021-10-01').endpoint]"
            },
            "storageId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
            },
            "keyvaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
            },
            "containerRegistryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
            },
            "applicationInsightsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ai-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aiHubName": {
            "value": "[format('aih-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "aiHubFriendlyName": {
            "value": "[parameters('aiHubFriendlyName')]"
          },
          "aiHubDescription": {
            "value": "[parameters('aiHubDescription')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "uniqueSuffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "vnetRgName": {
            "value": "[parameters('vnetRgName')]"
          },
          "vnetResourceId": {
            "value": "[variables('vnetResourceId')]"
          },
          "subnetResourceId": {
            "value": "[variables('subnetResourceId')]"
          },
          "aiServicesId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.aiservicesID.value]"
          },
          "aiServicesTarget": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.aiservicesTarget.value]"
          },
          "applicationInsightsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.applicationInsightsId.value]"
          },
          "containerRegistryId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.containerRegistryId.value]"
          },
          "keyVaultId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.keyvaultId.value]"
          },
          "storageAccountId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.storageId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "15168441716994606766"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "aiHubName": {
              "type": "string",
              "metadata": {
                "description": "AI hub name"
              }
            },
            "aiHubFriendlyName": {
              "type": "string",
              "defaultValue": "[parameters('aiHubName')]",
              "metadata": {
                "description": "AI hub display name"
              }
            },
            "aiHubDescription": {
              "type": "string",
              "metadata": {
                "description": "AI hub description"
              }
            },
            "applicationInsightsId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the application insights resource for storing diagnostics logs"
              }
            },
            "containerRegistryId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the container registry resource for storing docker images"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the key vault resource for storing connection strings"
              }
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the storage account resource for storing experimentation outputs"
              }
            },
            "aiServicesId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the AI Services resource"
              }
            },
            "aiServicesTarget": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the AI Services endpoint"
              }
            },
            "vnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the virtual network to deploy the resource into."
              }
            },
            "vnetRgName": {
              "type": "string",
              "metadata": {
                "description": "Resource group name of the virtual network to deploy the resource into."
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Subnet Id to deploy into."
              }
            },
            "uniqueSuffix": {
              "type": "string",
              "metadata": {
                "description": "Unique Suffix used for name generation"
              }
            }
          },
          "variables": {
            "privateEndpointName": "[format('{0}-AIHub-PE', parameters('aiHubName'))]",
            "targetSubResource": [
              "amlworkspace"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-01-01-preview",
              "name": "[format('{0}/{1}', parameters('aiHubName'), format('{0}-connection-AIServices', parameters('aiHubName')))]",
              "properties": {
                "category": "AIServices",
                "target": "[parameters('aiServicesTarget')]",
                "authType": "ApiKey",
                "isSharedToAll": true,
                "credentials": {
                  "key": "[format('{0}', listKeys(parameters('aiServicesId'), '2021-10-01').key1)]"
                },
                "metadata": {
                  "ApiType": "Azure",
                  "ResourceId": "[parameters('aiServicesId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2023-10-01",
              "name": "[parameters('aiHubName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[parameters('aiHubFriendlyName')]",
                "description": "[parameters('aiHubDescription')]",
                "keyVault": "[parameters('keyVaultId')]",
                "storageAccount": "[parameters('storageAccountId')]",
                "applicationInsights": "[parameters('applicationInsightsId')]",
                "containerRegistry": "[parameters('containerRegistryId')]",
                "publicNetworkAccess": "Disabled",
                "managedNetwork": {
                  "isolationMode": "AllowOnlyApprovedOutbound",
                  "outboundRules": {}
                },
                "sharedPrivateLinkResources": []
              },
              "kind": "hub"
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                },
                "customNetworkInterfaceName": "[format('{0}-nic-{1}', parameters('aiHubName'), parameters('uniqueSuffix'))]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('aiHubName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]",
                      "groupIds": "[variables('targetSubResource')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-DNS', parameters('aiHubName'))]",
              "subscriptionId": "[subscription().subscriptionId]",
              "resourceGroup": "[parameters('vnetRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "17062012217240294251"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2018-09-01",
                      "name": "privatelink.api.azureml.ms",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2018-09-01",
                      "name": "privatelink.notebooks.azure.net",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-VirtualNetworkLink', parameters('aiHubName'))]",
              "subscriptionId": "[subscription().subscriptionId]",
              "resourceGroup": "[parameters('vnetRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkId": {
                    "value": "[parameters('vnetResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "2810826815907738108"
                    }
                  },
                  "parameters": {
                    "virtualNetworkId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[format('privatelink.api.azureml.ms/{0}', uniqueString(parameters('virtualNetworkId')))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        },
                        "registrationEnabled": false
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[format('privatelink.notebooks.azure.net/{0}', uniqueString(parameters('virtualNetworkId')))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetRgName')), 'Microsoft.Resources/deployments', format('{0}-DNS', parameters('aiHubName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-dnsZoneGroup', parameters('aiHubName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetRgName": {
                    "value": "[parameters('vnetRgName')]"
                  },
                  "privateEndpointName": {
                    "value": "[variables('privateEndpointName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "5775207469590924552"
                    }
                  },
                  "parameters": {
                    "privateEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name for the endpoint"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "vnetRgName": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource Vnet name of the virtual network"
                      }
                    }
                  },
                  "variables": {
                    "subscriptionId": "[subscription().subscriptionId]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/default', parameters('privateEndpointName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-api-azureml-ms",
                            "properties": {
                              "privateDnsZoneId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms', variables('subscriptionId'), parameters('vnetRgName'))]"
                            }
                          },
                          {
                            "name": "privatelink-notebooks-azure-net",
                            "properties": {
                              "privateDnsZoneId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net', variables('subscriptionId'), parameters('vnetRgName'))]"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetRgName')), 'Microsoft.Resources/deployments', format('{0}-DNS', parameters('aiHubName')))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
              ]
            }
          ],
          "outputs": {
            "aiHubID": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    }
  ]
}